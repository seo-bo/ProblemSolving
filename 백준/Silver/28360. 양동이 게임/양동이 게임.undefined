#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main(void)
{
	cin.tie(0)->sync_with_stdio(0);
	int n = 0, m = 0;
	cin >> n >> m;
	vector<double>dp(n + 1, 0);
	vector<vector<int>>graph(n + 1);
	vector<int>degree(n + 1);
	for (int i = 0; i < m; ++i)
	{
		int a = 0, b = 0;
		cin >> a >> b;
		graph[a].push_back(b);
		degree[b]++;
	}
	dp[1] = 100;
	queue<int>q;
	for (int i = 1; i <= n; ++i)
	{
		if (!degree[i])
		{
			q.push(i);
		}
	}
	while (!q.empty())
	{
		int cur = q.front();
		q.pop();
		if (!graph[cur].empty())
		{
			int siz = graph[cur].size();
			for (auto& i : graph[cur])
			{
				dp[i] += dp[cur] / siz;
				if (--degree[i] == 0)
				{
					q.push(i);
				}
			}
			dp[cur] = 0;
		}
	}
	double ans = -1;
	for (int i = 1; i <= n; ++i)
	{
		ans = max(ans, dp[i]);
	}
	cout << fixed << setprecision(12) << ans;
	return 0;
}