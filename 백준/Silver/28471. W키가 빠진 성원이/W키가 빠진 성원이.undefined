#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;

int main(void)
{
	cin.tie(0)->sync_with_stdio(0);
	vector<vector<int>>dir = { {-1,-1},{-1,0},{-1,1},{0,-1},{0,1},{1,-1},{1,1} };
	int n = 0;
	cin >> n;
	vector<vector<char>>v(n, vector<char>(n));
	queue<pii>q;
	vector<vector<int>>visited(n, vector<int>(n, INT_MAX));
	for (int i = 0; i < n; ++i)
	{
		string str;
		cin >> str;
		for (int j = 0; j < n; ++j)
		{
			v[i][j] = str[j];
			if (str[j] == 'F')
			{
				visited[i][j] = 0;
				q.push(make_pair(i, j));
			}
		}
	}
	while (!q.empty())
	{
		auto [x, y] = q.front();
		q.pop();
		for (int i = 0; i < 7; ++i)
		{
			int nx = x + dir[i][0];
			int ny = y + dir[i][1];
			if (nx >= 0 && nx < n && ny >= 0 && ny < n && v[nx][ny] == '.')
			{
				if (visited[nx][ny] > visited[x][y] + 1)
				{
					visited[nx][ny] = visited[x][y] + 1;
					q.push(make_pair(nx, ny));
				}
			}
		}
	}
	int ans = 0;
	for (auto& i : visited)
	{
		for (auto& j : i)
		{
			if (j == INT_MAX)
			{
				continue;
			}
			ans++;
		}
	}
	cout << ans - 1;
	return 0;
}